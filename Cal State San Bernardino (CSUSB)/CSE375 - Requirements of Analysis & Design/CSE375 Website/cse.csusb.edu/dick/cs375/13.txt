.Open 13 Object Design + GRASP
.Table Date	#	Topic (Participation 2pt)	Study pages (2 pts)	Quiz(15 pts)	Project Work(10 pts)
.Row Previous	12	GRASP	271-319	-	W5(Class Diagrams)
.Row Today	13	Object Design	320-362	Q6(271-362)	-
.Row Next	14	Design..Code	363-394	-	W6(GRASP)
.Close.Table
. Revision History
.Table Version#	Date	Description	Author
.Row 0	2005-01-03	Used boiler plate to make template	RJB
.Row 1	2005-02-14	Input chapter headlines	RJB
.Row 3	2005-02-21	Improved instructions and notes	RJB
.Row 4	2005-02-27	Added questions and some answers	RJB
.Row 5	2006-02-14	2006 upgrade    	RJB
.Row 6	2012-12-10	Added C++ code for logins

.Close.Table
. Project W5 -- Interactions and class diagram
.Open Designing Objects with GRASP
. Introduction -- the No-Magic Zone
	* Design becomes more logical and less magic.
. 18.1 Realizing a Use Case
	* Creating a set of objects that share the responsibilities
implied by what a user needs to do.
. Figure 18.1 The big picture
. 18.2 More on the artifacts
Process= iterate the following
.List
	SSD -> 
	System Operations/events -> 
	Contracts ( + tests ) -> 
	Interactions & Classes ->
	Code
.Close.List

Communications (Larman+MVC)
.List
	UserInterface generates SystemEvents.
	SystemEvents feed the Controlers
	Controlers talk to each other and domain layer objects.
	Controlers return results to the UserInterface.
	Domain layer objects use lower layers as needed
	Domain layer objects notify the controlers if anything important happens.
.Close.List
.See ./patterns.html#MVC

Examples
Stock taking at a depot (bring the handed out answers
to the last quiz to class.

. Many Interactions lead to one DCD
We use the
.Key Design Class Diagram or DCD
to gather the functions/operations discovered in all the interactions
we study into a single collection of classes.

Interactions show objects.  DCDs show classes.

An interaction that shows [a:A] sending a message f(x) to object [b:B]
will require the function/operation f(x) to be in class [B].  A message
from [c:C] to [d:B] will also go into class [B].  The objects
b and d are different objects in the same class.

All the messages in your interaction diagrams must appear in the targetted
classes in your DCD.

All the classes in your DCD should be the same as messages some interactions.

Check the spelling, naming, and parameters of each interaction message
with its matching DCD operation.

. 18.3 Next -- Examples
. 18.4 Example: NextGen Point of Sale
. How to connect UI to Domain?
. Initialization p347-349
.Table Question	Answer
.Row When to design it?	LAST
.Row How to design it?	Start another use case.
.Row What objects are created first?	THINK
.Close.Table
. 18.5 Example: Monopoly
	Command-Query separation
.Open 18.6 The Design Process
	Iterative
	Evolutionary
	Team
	Starts in inception and continues thru elaboration and construction.
	+ Validate designs by peer review as you draw them.
	+ Check designs by coding, compiling, and testing.
	+ Improve designs and code by refactoring.
.Close
. Table 18.1 Review artifacts and disciplines.
.Close Designing Objects with GRASP
. Exercises
.See ./13x.html
. Assigned Project work: GRASP
.See ./w6.html
will be due next week.
. I will show how to do logins
.See ./logins.cpp
. Quiz on UML Class Diagrams
Like the exercise in the last class
.See ./12.html#Exercises
. Questions and Answers
.See ./13q.html
. Next -- More Design and some Coding
.See ./14.html
.Close 13 Object Design + GRASP
. Review Questions
.See ./13r.html
